// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/echo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcServiceTest
{

    /// <summary>Holder for reflection information generated from Protos/echo.proto</summary>
    public static partial class EchoReflection
    {

        #region Descriptor
        /// <summary>File descriptor for Protos/echo.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static EchoReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "ChFQcm90b3MvZWNoby5wcm90bxIEZWNobyI+CgtFY2hvUmVxdWVzdBIPCgdt",
                  "ZXNzYWdlGAEgASgJEh4KB3BheWxvYWQYAiABKAsyDS5lY2hvLlBheWxvYWQi",
                  "HAoJRWNob1JlcGx5Eg8KB21lc3NhZ2UYASABKAkicAoHUGF5bG9hZBINCgVk",
                  "YXRhMRgBIAEoCRINCgVkYXRhMhgCIAEoCRINCgVkYXRhMxgDIAEoCRINCgNv",
                  "bmUYZCABKAlIABINCgN0d28YZSABKAlIABIPCgV0aHJlZRhmIAEoCUgAQgkK",
                  "B015T25lT2YyMgoERWNobxIqCgRFY2hvEhEuZWNoby5FY2hvUmVxdWVzdBoP",
                  "LmVjaG8uRWNob1JlcGx5QhKqAg9HcnBjU2VydmljZVRlc3RiBnByb3RvMw=="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.EchoRequest), global::GrpcServiceTest.EchoRequest.Parser, new[]{ "Message", "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.EchoReply), global::GrpcServiceTest.EchoReply.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.Payload), global::GrpcServiceTest.Payload.Parser, new[]{ "Data1", "Data2", "Data3", "One", "Two", "Three" }, new[]{ "MyOneOf" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class EchoRequest : pb::IMessage<EchoRequest>
    {
        private static readonly pb::MessageParser<EchoRequest> _parser = new pb::MessageParser<EchoRequest>(() => new EchoRequest());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EchoRequest> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::GrpcServiceTest.EchoReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoRequest()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoRequest(EchoRequest other) : this()
        {
            message_ = other.message_;
            payload_ = other.payload_ != null ? other.payload_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoRequest Clone()
        {
            return new EchoRequest(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "payload" field.</summary>
        public const int PayloadFieldNumber = 2;
        private global::GrpcServiceTest.Payload payload_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::GrpcServiceTest.Payload Payload
        {
            get { return payload_; }
            set
            {
                payload_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EchoRequest);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EchoRequest other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Message != other.Message) return false;
            if (!object.Equals(Payload, other.Payload)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (payload_ != null) hash ^= Payload.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Message.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Message);
            }
            if (payload_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(Payload);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (payload_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EchoRequest other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            if (other.payload_ != null)
            {
                if (payload_ == null)
                {
                    Payload = new global::GrpcServiceTest.Payload();
                }
                Payload.MergeFrom(other.Payload);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Message = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (payload_ == null)
                            {
                                Payload = new global::GrpcServiceTest.Payload();
                            }
                            input.ReadMessage(Payload);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class EchoReply : pb::IMessage<EchoReply>
    {
        private static readonly pb::MessageParser<EchoReply> _parser = new pb::MessageParser<EchoReply>(() => new EchoReply());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<EchoReply> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::GrpcServiceTest.EchoReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoReply()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoReply(EchoReply other) : this()
        {
            message_ = other.message_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public EchoReply Clone()
        {
            return new EchoReply(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message
        {
            get { return message_; }
            set
            {
                message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as EchoReply);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(EchoReply other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Message != other.Message) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Message.Length != 0) hash ^= Message.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Message.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Message);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Message.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(EchoReply other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Message.Length != 0)
            {
                Message = other.Message;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Message = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Payload : pb::IMessage<Payload>
    {
        private static readonly pb::MessageParser<Payload> _parser = new pb::MessageParser<Payload>(() => new Payload());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Payload> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::GrpcServiceTest.EchoReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload(Payload other) : this()
        {
            data1_ = other.data1_;
            data2_ = other.data2_;
            data3_ = other.data3_;
            switch (other.MyOneOfCase)
            {
                case MyOneOfOneofCase.One:
                    One = other.One;
                    break;
                case MyOneOfOneofCase.Two:
                    Two = other.Two;
                    break;
                case MyOneOfOneofCase.Three:
                    Three = other.Three;
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Payload Clone()
        {
            return new Payload(this);
        }

        /// <summary>Field number for the "data1" field.</summary>
        public const int Data1FieldNumber = 1;
        private string data1_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Data1
        {
            get { return data1_; }
            set
            {
                data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "data2" field.</summary>
        public const int Data2FieldNumber = 2;
        private string data2_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Data2
        {
            get { return data2_; }
            set
            {
                data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "data3" field.</summary>
        public const int Data3FieldNumber = 3;
        private string data3_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Data3
        {
            get { return data3_; }
            set
            {
                data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "one" field.</summary>
        public const int OneFieldNumber = 100;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string One
        {
            get { return myOneOfCase_ == MyOneOfOneofCase.One ? (string)myOneOf_ : ""; }
            set
            {
                myOneOf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                myOneOfCase_ = MyOneOfOneofCase.One;
            }
        }

        /// <summary>Field number for the "two" field.</summary>
        public const int TwoFieldNumber = 101;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Two
        {
            get { return myOneOfCase_ == MyOneOfOneofCase.Two ? (string)myOneOf_ : ""; }
            set
            {
                myOneOf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                myOneOfCase_ = MyOneOfOneofCase.Two;
            }
        }

        /// <summary>Field number for the "three" field.</summary>
        public const int ThreeFieldNumber = 102;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Three
        {
            get { return myOneOfCase_ == MyOneOfOneofCase.Three ? (string)myOneOf_ : ""; }
            set
            {
                myOneOf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                myOneOfCase_ = MyOneOfOneofCase.Three;
            }
        }

        private object myOneOf_;
        /// <summary>Enum of possible cases for the "MyOneOf" oneof.</summary>
        public enum MyOneOfOneofCase
        {
            None = 0,
            One = 100,
            Two = 101,
            Three = 102,
        }
        private MyOneOfOneofCase myOneOfCase_ = MyOneOfOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MyOneOfOneofCase MyOneOfCase
        {
            get { return myOneOfCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMyOneOf()
        {
            myOneOfCase_ = MyOneOfOneofCase.None;
            myOneOf_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Payload);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Payload other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Data1 != other.Data1) return false;
            if (Data2 != other.Data2) return false;
            if (Data3 != other.Data3) return false;
            if (One != other.One) return false;
            if (Two != other.Two) return false;
            if (Three != other.Three) return false;
            if (MyOneOfCase != other.MyOneOfCase) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Data1.Length != 0) hash ^= Data1.GetHashCode();
            if (Data2.Length != 0) hash ^= Data2.GetHashCode();
            if (Data3.Length != 0) hash ^= Data3.GetHashCode();
            if (myOneOfCase_ == MyOneOfOneofCase.One) hash ^= One.GetHashCode();
            if (myOneOfCase_ == MyOneOfOneofCase.Two) hash ^= Two.GetHashCode();
            if (myOneOfCase_ == MyOneOfOneofCase.Three) hash ^= Three.GetHashCode();
            hash ^= (int)myOneOfCase_;
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Data1.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Data1);
            }
            if (Data2.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Data2);
            }
            if (Data3.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Data3);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.One)
            {
                output.WriteRawTag(162, 6);
                output.WriteString(One);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.Two)
            {
                output.WriteRawTag(170, 6);
                output.WriteString(Two);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.Three)
            {
                output.WriteRawTag(178, 6);
                output.WriteString(Three);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Data1.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
            }
            if (Data2.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
            }
            if (Data3.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.One)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(One);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.Two)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Two);
            }
            if (myOneOfCase_ == MyOneOfOneofCase.Three)
            {
                size += 2 + pb::CodedOutputStream.ComputeStringSize(Three);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Payload other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Data1.Length != 0)
            {
                Data1 = other.Data1;
            }
            if (other.Data2.Length != 0)
            {
                Data2 = other.Data2;
            }
            if (other.Data3.Length != 0)
            {
                Data3 = other.Data3;
            }
            switch (other.MyOneOfCase)
            {
                case MyOneOfOneofCase.One:
                    One = other.One;
                    break;
                case MyOneOfOneofCase.Two:
                    Two = other.Two;
                    break;
                case MyOneOfOneofCase.Three:
                    Three = other.Three;
                    break;
            }

            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Data1 = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Data2 = input.ReadString();
                            break;
                        }
                    case 26:
                        {
                            Data3 = input.ReadString();
                            break;
                        }
                    case 802:
                        {
                            One = input.ReadString();
                            break;
                        }
                    case 810:
                        {
                            Two = input.ReadString();
                            break;
                        }
                    case 818:
                        {
                            Three = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
