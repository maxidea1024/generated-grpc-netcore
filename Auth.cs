// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcServiceTest {

  /// <summary>Holder for reflection information generated from Protos/auth.proto</summary>
  internal static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvYXV0aC5wcm90bxIEYXV0aCJgCgxMb2dpblJlcXVlc3QSEgoK",
            "bWFya2V0X3VpZBgBIAEoCRITCgttYXJrZXRfdHlwZRgCIAEoBxISCgpkZXZp",
            "Y2VfdWlkGAMgASgJEhMKC2RldmljZV90eXBlGAQgASgHIlQKCkxvZ2luUmVw",
            "bHkSDwoHdXNlcl9zbhgBIAEoEhIYChBwbGF0Zm9ybV91c2VyX2lkGAIgASgJ",
            "EhsKE3BsYXRmb3JtX3VzZXJfdG9rZW4YAyABKAkijwEKCUV2ZW50SW5mbxIR",
            "CghldmVudF9zbhiQTiABKBASEgoKZXZlbnRfVHlwZRgCIAEoERITCgtldmVu",
            "dF92YWx1ZRgDIAEoCRIQCghzdGFydF9kdBgEIAEoCRIOCgZlbmRfZHQYBSAB",
            "KAkSDwoHY2hlY2tlZBgGIAEoCBITCgtpX2FtX3N0cmluZxgHIAEoCSI3ChBF",
            "dmVudEluZm9SZXF1ZXN0EiMKCmV2ZW50X2luZm8YASADKAsyDy5hdXRoLkV2",
            "ZW50SW5mbyIQCg5FdmVudEluZm9SZXBseTJwCgRBdXRoEi0KBUxvZ2luEhIu",
            "YXV0aC5Mb2dpblJlcXVlc3QaEC5hdXRoLkxvZ2luUmVwbHkSOQoJRXZlbnRJ",
            "bmZvEhYuYXV0aC5FdmVudEluZm9SZXF1ZXN0GhQuYXV0aC5FdmVudEluZm9S",
            "ZXBseUISqgIPR3JwY1NlcnZpY2VUZXN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.LoginRequest), global::GrpcServiceTest.LoginRequest.Parser, new[]{ "MarketUid", "MarketType", "DeviceUid", "DeviceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.LoginReply), global::GrpcServiceTest.LoginReply.Parser, new[]{ "UserSn", "PlatformUserId", "PlatformUserToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.EventInfo), global::GrpcServiceTest.EventInfo.Parser, new[]{ "EventSn", "EventType", "EventValue", "StartDt", "EndDt", "Checked", "IAmString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.EventInfoRequest), global::GrpcServiceTest.EventInfoRequest.Parser, new[]{ "EventInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcServiceTest.EventInfoReply), global::GrpcServiceTest.EventInfoReply.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServiceTest.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      marketUid_ = other.marketUid_;
      marketType_ = other.marketType_;
      deviceUid_ = other.deviceUid_;
      deviceType_ = other.deviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "market_uid" field.</summary>
    public const int MarketUidFieldNumber = 1;
    private string marketUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketUid {
      get { return marketUid_; }
      set {
        marketUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "market_type" field.</summary>
    public const int MarketTypeFieldNumber = 2;
    private uint marketType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MarketType {
      get { return marketType_; }
      set {
        marketType_ = value;
      }
    }

    /// <summary>Field number for the "device_uid" field.</summary>
    public const int DeviceUidFieldNumber = 3;
    private string deviceUid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceUid {
      get { return deviceUid_; }
      set {
        deviceUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_type" field.</summary>
    public const int DeviceTypeFieldNumber = 4;
    private uint deviceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DeviceType {
      get { return deviceType_; }
      set {
        deviceType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketUid != other.MarketUid) return false;
      if (MarketType != other.MarketType) return false;
      if (DeviceUid != other.DeviceUid) return false;
      if (DeviceType != other.DeviceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MarketUid.Length != 0) hash ^= MarketUid.GetHashCode();
      if (MarketType != 0) hash ^= MarketType.GetHashCode();
      if (DeviceUid.Length != 0) hash ^= DeviceUid.GetHashCode();
      if (DeviceType != 0) hash ^= DeviceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MarketUid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MarketUid);
      }
      if (MarketType != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(MarketType);
      }
      if (DeviceUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceUid);
      }
      if (DeviceType != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(DeviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MarketUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MarketUid);
      }
      if (MarketType != 0) {
        size += 1 + 4;
      }
      if (DeviceUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceUid);
      }
      if (DeviceType != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.MarketUid.Length != 0) {
        MarketUid = other.MarketUid;
      }
      if (other.MarketType != 0) {
        MarketType = other.MarketType;
      }
      if (other.DeviceUid.Length != 0) {
        DeviceUid = other.DeviceUid;
      }
      if (other.DeviceType != 0) {
        DeviceType = other.DeviceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MarketUid = input.ReadString();
            break;
          }
          case 21: {
            MarketType = input.ReadFixed32();
            break;
          }
          case 26: {
            DeviceUid = input.ReadString();
            break;
          }
          case 37: {
            DeviceType = input.ReadFixed32();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class LoginReply : pb::IMessage<LoginReply> {
    private static readonly pb::MessageParser<LoginReply> _parser = new pb::MessageParser<LoginReply>(() => new LoginReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServiceTest.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply(LoginReply other) : this() {
      userSn_ = other.userSn_;
      platformUserId_ = other.platformUserId_;
      platformUserToken_ = other.platformUserToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReply Clone() {
      return new LoginReply(this);
    }

    /// <summary>Field number for the "user_sn" field.</summary>
    public const int UserSnFieldNumber = 1;
    private long userSn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserSn {
      get { return userSn_; }
      set {
        userSn_ = value;
      }
    }

    /// <summary>Field number for the "platform_user_id" field.</summary>
    public const int PlatformUserIdFieldNumber = 2;
    private string platformUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformUserId {
      get { return platformUserId_; }
      set {
        platformUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_user_token" field.</summary>
    public const int PlatformUserTokenFieldNumber = 3;
    private string platformUserToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformUserToken {
      get { return platformUserToken_; }
      set {
        platformUserToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserSn != other.UserSn) return false;
      if (PlatformUserId != other.PlatformUserId) return false;
      if (PlatformUserToken != other.PlatformUserToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserSn != 0L) hash ^= UserSn.GetHashCode();
      if (PlatformUserId.Length != 0) hash ^= PlatformUserId.GetHashCode();
      if (PlatformUserToken.Length != 0) hash ^= PlatformUserToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserSn != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(UserSn);
      }
      if (PlatformUserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlatformUserId);
      }
      if (PlatformUserToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlatformUserToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserSn != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(UserSn);
      }
      if (PlatformUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformUserId);
      }
      if (PlatformUserToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformUserToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReply other) {
      if (other == null) {
        return;
      }
      if (other.UserSn != 0L) {
        UserSn = other.UserSn;
      }
      if (other.PlatformUserId.Length != 0) {
        PlatformUserId = other.PlatformUserId;
      }
      if (other.PlatformUserToken.Length != 0) {
        PlatformUserToken = other.PlatformUserToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserSn = input.ReadSInt64();
            break;
          }
          case 18: {
            PlatformUserId = input.ReadString();
            break;
          }
          case 26: {
            PlatformUserToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EventInfo : pb::IMessage<EventInfo> {
    private static readonly pb::MessageParser<EventInfo> _parser = new pb::MessageParser<EventInfo>(() => new EventInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServiceTest.AuthReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfo(EventInfo other) : this() {
      eventSn_ = other.eventSn_;
      eventType_ = other.eventType_;
      eventValue_ = other.eventValue_;
      startDt_ = other.startDt_;
      endDt_ = other.endDt_;
      checked_ = other.checked_;
      iAmString_ = other.iAmString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfo Clone() {
      return new EventInfo(this);
    }

    /// <summary>Field number for the "event_sn" field.</summary>
    public const int EventSnFieldNumber = 10000;
    private long eventSn_;
    /// <summary>
    /// [default = 100];
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventSn {
      get { return eventSn_; }
      set {
        eventSn_ = value;
      }
    }

    /// <summary>Field number for the "event_Type" field.</summary>
    public const int EventTypeFieldNumber = 2;
    private int eventType_;
    /// <summary>
    /// HomeEventType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "event_value" field.</summary>
    public const int EventValueFieldNumber = 3;
    private string eventValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventValue {
      get { return eventValue_; }
      set {
        eventValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_dt" field.</summary>
    public const int StartDtFieldNumber = 4;
    private string startDt_ = "";
    /// <summary>
    ///DateTime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartDt {
      get { return startDt_; }
      set {
        startDt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_dt" field.</summary>
    public const int EndDtFieldNumber = 5;
    private string endDt_ = "";
    /// <summary>
    ///DateTime
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndDt {
      get { return endDt_; }
      set {
        endDt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checked" field.</summary>
    public const int CheckedFieldNumber = 6;
    private bool checked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Checked {
      get { return checked_; }
      set {
        checked_ = value;
      }
    }

    /// <summary>Field number for the "i_am_string" field.</summary>
    public const int IAmStringFieldNumber = 7;
    private string iAmString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IAmString {
      get { return iAmString_; }
      set {
        iAmString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventSn != other.EventSn) return false;
      if (EventType != other.EventType) return false;
      if (EventValue != other.EventValue) return false;
      if (StartDt != other.StartDt) return false;
      if (EndDt != other.EndDt) return false;
      if (Checked != other.Checked) return false;
      if (IAmString != other.IAmString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventSn != 0L) hash ^= EventSn.GetHashCode();
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (EventValue.Length != 0) hash ^= EventValue.GetHashCode();
      if (StartDt.Length != 0) hash ^= StartDt.GetHashCode();
      if (EndDt.Length != 0) hash ^= EndDt.GetHashCode();
      if (Checked != false) hash ^= Checked.GetHashCode();
      if (IAmString.Length != 0) hash ^= IAmString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(EventType);
      }
      if (EventValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EventValue);
      }
      if (StartDt.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StartDt);
      }
      if (EndDt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EndDt);
      }
      if (Checked != false) {
        output.WriteRawTag(48);
        output.WriteBool(Checked);
      }
      if (IAmString.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(IAmString);
      }
      if (EventSn != 0L) {
        output.WriteRawTag(129, 241, 4);
        output.WriteSFixed64(EventSn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventSn != 0L) {
        size += 3 + 8;
      }
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(EventType);
      }
      if (EventValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventValue);
      }
      if (StartDt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDt);
      }
      if (EndDt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDt);
      }
      if (Checked != false) {
        size += 1 + 1;
      }
      if (IAmString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IAmString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInfo other) {
      if (other == null) {
        return;
      }
      if (other.EventSn != 0L) {
        EventSn = other.EventSn;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.EventValue.Length != 0) {
        EventValue = other.EventValue;
      }
      if (other.StartDt.Length != 0) {
        StartDt = other.StartDt;
      }
      if (other.EndDt.Length != 0) {
        EndDt = other.EndDt;
      }
      if (other.Checked != false) {
        Checked = other.Checked;
      }
      if (other.IAmString.Length != 0) {
        IAmString = other.IAmString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            EventType = input.ReadSInt32();
            break;
          }
          case 26: {
            EventValue = input.ReadString();
            break;
          }
          case 34: {
            StartDt = input.ReadString();
            break;
          }
          case 42: {
            EndDt = input.ReadString();
            break;
          }
          case 48: {
            Checked = input.ReadBool();
            break;
          }
          case 58: {
            IAmString = input.ReadString();
            break;
          }
          case 80001: {
            EventSn = input.ReadSFixed64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class EventInfoRequest : pb::IMessage<EventInfoRequest> {
    private static readonly pb::MessageParser<EventInfoRequest> _parser = new pb::MessageParser<EventInfoRequest>(() => new EventInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServiceTest.AuthReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoRequest(EventInfoRequest other) : this() {
      eventInfo_ = other.eventInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoRequest Clone() {
      return new EventInfoRequest(this);
    }

    /// <summary>Field number for the "event_info" field.</summary>
    public const int EventInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::GrpcServiceTest.EventInfo> _repeated_eventInfo_codec
        = pb::FieldCodec.ForMessage(10, global::GrpcServiceTest.EventInfo.Parser);
    private readonly pbc::RepeatedField<global::GrpcServiceTest.EventInfo> eventInfo_ = new pbc::RepeatedField<global::GrpcServiceTest.EventInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcServiceTest.EventInfo> EventInfo {
      get { return eventInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!eventInfo_.Equals(other.eventInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= eventInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      eventInfo_.WriteTo(output, _repeated_eventInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventInfo_.CalculateSize(_repeated_eventInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInfoRequest other) {
      if (other == null) {
        return;
      }
      eventInfo_.Add(other.eventInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventInfo_.AddEntriesFrom(input, _repeated_eventInfo_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Pass
  /// </summary>
  internal sealed partial class EventInfoReply : pb::IMessage<EventInfoReply> {
    private static readonly pb::MessageParser<EventInfoReply> _parser = new pb::MessageParser<EventInfoReply>(() => new EventInfoReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInfoReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcServiceTest.AuthReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoReply(EventInfoReply other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInfoReply Clone() {
      return new EventInfoReply(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInfoReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInfoReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInfoReply other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
